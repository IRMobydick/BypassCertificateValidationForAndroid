Usage:

To usage Cookies

BypassSSLCerficicate.cleanCookieManager();
BypassSSLCerficicate.registerCookieManager();
BypassSSLCerficicate.unregisterCookieManager();



To usage BasicAuthentication

BypassSSLCerficicate.setBasicAuthentication(user, pass);
BypassSSLCerficicate.removeBasicAuthentication();



Synchronous calls

SendGET:
			
Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
BypassSSLCerficicate bypass = BypassSSLCerficicate.getInstance(true);
String content = bypass.sendGET(url, headers);
			
SendPOST:
				
Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
Hashtable<String,String> params = new Hashtable<String,String>();
params.put("name", "you");
BypassSSLCerficicate bypass = BypassSSLCerficicate.getInstance(true);
String content = bypass.sendPOST(url, headers, params);
			
SendJSON:
			
Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
String json = "{\"key\":\"value\"}";
BypassSSLCerficicate bypass = BypassSSLCerficicate.getInstance(true);
String content = bypass.sendJSON(url, headers, json);



Asynchronous calls

SendGET:

Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
AsyncTask<Object, Object, Object> task = BypassSSLCerficicate.asynchSendGET(true, url, headers, new IBypassSSLCerficicate(){
	@Override
	public void response(int responseCode, String responseMessage, String content) {
	}
});

SendPOST:

Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
Hashtable<String,String> params = new Hashtable<String,String>();
params.put("name", "you");
AsyncTask<Object, Object, Object> task = BypassSSLCerficicate.asynchSendPOST(true, url, headers, params, new IBypassSSLCerficicate(){
	@Override
	public void response(int responseCode, String responseMessage, String content) {
	}
});

SendJSON:

Hashtable<String,String> headers = new Hashtable<String,String>();
String url = "https://x.x.x.x/BypassSSLCerficicate/test.php";
headers.put("User-Agent", "BypassSSLCerficicate 1.1");
String json = "{\"key\":\"value\"}";
AsyncTask<Object, Object, Object> task = BypassSSLCerficicate.asynchSendJSON(true, url, headers, json, new IBypassSSLCerficicate(){
	@Override
	public void response(int responseCode, String responseMessage, String content) {
	}
});
